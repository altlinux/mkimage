#!/bin/ash -efu

. shell-error

verbose="${VERBOSE:+-v}"
quiet="${QUIET:+-q}"
TARGET="${TARGET:+--target="$TARGET"}"
NUMBER="${NUMBER:+--number="$NUMBER"}"
EXCLUDE_DOCS="${EXCLUDE_DOCS:+--excludedocs}"
APT_CONFIG="${APT_CONFIG:+--apt-config="$APT_CONFIG"}"
APT_PREFIX="${APT_PREFIX:+--apt-prefix="$APT_PREFIX"}"
CACHEDIR="${CACHEDIR:+--cache-dir="$CACHEDIR"}"
REQUIRES="${REQUIRES:-}"

dir="${WORKDIR:?workdir required}"
verbose "Work directory: $dir"

hasher_args="--save-fakeroot $verbose $quiet $NUMBER $EXCLUDE_DOCS $APT_CONFIG $APT_PREFIX"

hsh_install() {
	local dir="$1"; shift
	local requires="$1"; shift

	if [ -f "$requires" ]; then
		grep -v '^[[:space:]]*#' "$requires" |
			xargs -r \
				env -i PATH="$PATH" hsh-install $hasher_args -- "$dir"
	else
		env -i PATH="$PATH" hsh-install $hasher_args -- "$dir" $requires
	fi
}

hsh_initroot() {
	env -i PATH="$PATH" hsh --initroot $hasher_args $TARGET $CACHEDIR -- "$1" ||
		fatal "$1: Unable to make initial chroot: rc=$?"
}

[ -d "$dir/chroot" ] ||
	hsh_initroot "$dir"

[ -z "$REQUIRES" ] ||
	hsh_install "$dir" "$REQUIRES"

subdir="$dir/chroot/.subworkdir"
mkdir $verbose -p -- "$subdir"
verbose "Subwork directory: $subdir"

[ -n "$MKI_DATAIMAGE" -o -d "$subdir/chroot" ] ||
	hsh_initroot "$subdir"
