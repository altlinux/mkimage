#!/bin/ash -efu

. shell-error

verbose="${VERBOSE:+-v}"
quiet="${QUIET:+-q}"
REQUIRES="${REQUIRES:-}"
save_fakeroot=

dir="${WORKDIR:?workdir required}"
verbose "Work directory: $dir"

hsh_initroot() {
	env -i PATH="$PATH" \
	hsh \
	    --initroot \
	    --pkg-init-list='basesystem fakeroot>=0:0.7.3' \
	    --pkg-build-list='' \
	    $verbose $quiet \
	    $save_fakeroot \
	    ${TARGET:+--target="$TARGET"} \
	    ${HSH_NUMBER:+--number="$HSH_NUMBER"} \
	    ${HSH_EXCLUDE_DOCS:+--excludedocs} \
	    ${HSH_APT_CONFIG:+--apt-config="$HSH_APT_CONFIG"} \
	    ${HSH_APT_PREFIX:+--apt-prefix="$HSH_APT_PREFIX"} \
	    ${HSH_CACHEDIR:+--cache-dir="$HSH_CACHEDIR"} \
	    -- "$1" ||
	fatal "$1: Unable to make initial chroot: rc=$?"
}

[ -d "$dir/chroot" ] ||
	hsh_initroot "$dir"

[ -z "$MKI_INITROOT_REQUIRES" ] ||
	chroot-install $MKI_INITROOT_REQUIRES

ownership="$(stat -c '%u:%g' "$dir/chroot")" ||
	fatal "$dir/chroot: Unable to get ownership"

subdir="$dir/chroot/.subworkdir"
mkdir $verbose -p -m1770 -- "$subdir"
chown $verbose "$ownership" -- "$subdir"
verbose "Subwork directory: $subdir"

our="$dir/chroot/.our"
mkdir $verbose -p -m1770 -- "$our"
chown $verbose "$ownership" -- "$our"
verbose "Output directory for rooter user: $our"

save_fakeroot='--save-fakeroot'
[ -n "$MKI_DATAIMAGE" -o -d "$subdir/chroot" ] ||
	hsh_initroot "$subdir"
