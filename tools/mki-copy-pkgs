#!/bin/ash -efu

. "${0%/*}"/mki-sh-functions

verbose "has started executing."

destdir="${MKI_DESTDIR:-}"
REQUIRES="${IMAGE_PACKAGES:-}"
aptboxdir="${PKGBOX:?global aptbox required}"

tempdir=
exit_handler() {
    local rc=$?
    trap - EXIT
    [ -z "$tempdir" ] || rm -rf -- "$tempdir"
    exit $rc
}

if [ -z "$REQUIRES" ]; then
	message "Nothing to do"
	exit  0
fi

requires_list=

for r in $REQUIRES; do
	if [ -f "$r" ]; then
		requires_list="$requires_list $(grep -h '^[[:space:]]*[^#]' "$r" ||:)"
	else
		requires_list="$requires_list $r"
	fi
done

if [ -z "$requires_list" ]; then
	message "Nothing to do"
	exit 0
fi

trap exit_handler HUP INT QUIT TERM EXIT
tempdir="$(mktemp -d "$dir/$PROG.XXXXXXXXX")"

lstfile="$tempdir/lst"
errfile="$tempdir/err"

> "$lstfile"
> "$errfile"

rc=0
printf '%s\n' "$requires_list" |
	xargs -r mki-print-uris 2>>"$errfile" >>"$lstfile" ||
	rc=$?

conflicts=
if [ "$rc" -ne 0 ]; then
	if ! conflicts="$(LANG=C fgrep ': Conflicts: ' "$errfile")"; then
		cat "$errfile" >&2
		fatal 'could not copy packages.'
	fi
	> "$lstfile"
fi

if [ ! -s "$lstfile" ]; then
	verbose "Conflicts packages found in requires list"
	[ -z "$verbose" ] ||
		printf '%s\n' "$conflicts" >&2

	printf '%s\n' "$requires_list" |
		tr ' ' '\n' |
		xargs -ri mki-print-uris '{}' > "$lstfile"
fi

[ -s "$lstfile" ] ||
	fatal 'could not copy packages.'

sort -u "$lstfile" |
	tr ' ' '\n' |
	xargs -r cp $verbose -ut "$chroot/.in/" -- ||
	fatal 'could not copy packages.'

cat > "$chroot/tmp/script" <<EOF
#!/bin/sh -efu
mkdir $verbose -p -- '/.image/$destdir'
exec /.host/find /.in -mindepth 1 -maxdepth 1 -execdir cp $verbose -alft '/.image/$destdir' -- '{}' '+'
EOF

rc=0
mki-exec "$chroot/tmp/script" || rc=$?
rm -f -- "$chroot/tmp/script"
find "$chroot/.in/" -mindepth 1 -maxdepth 1 -execdir rm $verbose -rf -- '{}' '+'
exit $rc
