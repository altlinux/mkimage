#!/bin/ash -efu

. shell-error

verbose="${VERBOSE:+-v}"
quiet="${QUIET:+-q}"
destdir="${MKI_DESTDIR:-}"
NUMBER="${HSH_NUMBER:+--number="$HSH_NUMBER"}"
REQUIRES="${MKI_REQUIRES:-}"

aptboxdir="${APTBOXDIR:?global aptbox required}"
dir="${WORKDIR:?workdir required}"

ownership="$(stat -c '%u:%g' "$dir/chroot")" ||
	fatal "$dir/chroot: Unable to get ownership"

# assumed: defined aptbox
APT_Get_PrintLocalFile=
print_uris()
{
	local out
	local aptbox="$aptboxdir/aptbox"
	[ -d "$aptbox" ] ||
		fatal "$aptbox: Not a directory"

	if ! out="$("$aptbox/apt-get" -q -y --print-uris install -- "$@" 2>&1)"; then
		printf %s\\n "$out" >&2
		fatal 'failed to calculate package file list.'
	fi

	local all_pattern="'\\([a-z]\\+\\):\\([^']\\+\\)' .*"
	local local_pattern="'\\(file\\|copy\\):\\([^']\\+\\)' .*"

	local all_uris
	if ! all_uris="$(printf %s "$out" |sed -ne "s/^$all_pattern/\\2/pg")"; then
		printf %s\\n "$out" >&2
		fatal 'failed to filter package file list.'
	fi

	local local_uris cached_uris=
	if ! local_uris="$(printf %s "$out" |sed -ne "s/^$local_pattern/\\2/pg")"; then
		printf %s\\n "$out" >&2
		fatal 'failed to filter package file list.'
	fi

	if [ "$all_uris" != "$local_uris" ]; then
		if [ -z "$APT_Get_PrintLocalFile" ]; then
			if ! out="$("$aptbox/apt-get" -o APT::Get::PrintLocalFile=yes -q -y --print-uris install -- "$@" 2>&1)"; then
				printf %s\\n "$out" >&2
				fatal 'calculated package file list is not local and apt-get does not support APT::Get::PrintLocalFile option.'
			fi

			if ! cached_uris="$(printf %s "$out" |sed -ne "s/^$all_pattern/\\2/pg")" ||
			   [ -n "$cached_uris" ]; then
				printf %s\\n "$out" >&2
				fatal 'calculated package file list is not local and apt-get does not support APT::Get::PrintLocalFile option.'
			fi

			APT_Get_PrintLocalFile=1
		fi

		if [ -n "$verbose" ]; then
			"$aptbox/apt-get" -y -d install -- "$@" >&2 ||
				fatal 'failed to download packages from calculated package file list.'
		else
			if ! out="$("$aptbox/apt-get" -y -d install -- "$@" 2>&1)"; then
				printf %s\\n "$out" >&2
				fatal 'failed to download packages from calculated package file list.'
			fi
		fi

		if ! out="$("$aptbox/apt-get" -o APT::Get::PrintLocalFile=yes -q -y --print-uris install -- "$@" 2>&1)"; then
			printf %s\\n "$out" >&2
			fatal 'failed to calculate local package file list.'
		fi

		if ! cached_uris="$(printf %s "$out" |grep ^/)" || [ -z "$cached_uris" ]; then
			printf %s\\n "$out" >&2
			fatal 'failed to calculate local package file list.'
		fi
	fi

	if [ -n "$cached_uris" ]; then
		[ -n "$local_uris" ] && local_uris="$local_uris
$cached_uris" || local_uris="$cached_uris"
	fi

	printf %s "$local_uris" &&
		verbose 'calculated package file list.'
}

verbose "Work directory: $dir"
if [ -z "$REQUIRES" ]; then
	message "Nothing to do"
	exit  0
fi

pkg_filelist=
pkg_initlist=

if [ -f "$REQUIRES" ]; then
	pkg_init_list="$(grep -h '^[^#]' "$REQUIRES")" ||:
else
	pkg_init_list="$REQUIRES"
fi

pkg_filelist="$(print_uris setup filesystem rpm $pkg_init_list)" ||
	fatal 'Failed to generate package file list'

[ -n "$pkg_filelist" ] ||
	exit 0

printf %s\\n "$pkg_filelist" |
	tr ' ' '\n' |
	xargs -ri install -p -m644 $verbose -- '{}' "$dir/chroot/.in/" ||
	fatal 'Could not copy packages'

cat > "$dir/chroot/tmp/script" <<EOF
#!/bin/sh -efu
rm -rf -- '/.subworkdir/$destdir'
mkdir $verbose -p -- '/.subworkdir/$destdir'
/.host/find /.in -mindepth 1 -maxdepth 1 |xargs -r cp $verbose -alt '/.subworkdir/$destdir' --
EOF
chroot-exec "$dir/chroot/tmp/script"

find "$dir/chroot/.in/" -mindepth 1 -maxdepth 1 |xargs -r rm -rf --
